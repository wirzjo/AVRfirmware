
AEOLUS_Sensorboard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000048a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001ba8  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000583  00000000  00000000  00002088  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 000000c0  00000000  00000000  00002610  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000005cc  00000000  00000000  000026d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000022c  00000000  00000000  00002c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000504  00000000  00000000  00002ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000b4  00000000  00000000  000033cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000178  00000000  00000000  00003480  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000d0  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	ea e8       	ldi	r30, 0x8A	; 138
  48:	f4 e0       	ldi	r31, 0x04	; 4
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 30       	cpi	r26, 0x00	; 0
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	11 e0       	ldi	r17, 0x01	; 1
  58:	a0 e0       	ldi	r26, 0x00	; 0
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 30       	cpi	r26, 0x00	; 0
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	0e c2       	rjmp	.+1052   	; 0x486 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:
	/************************************************************************/
	/* BOOT                                                                 */
	/************************************************************************/
	
	//Init the input/output ports 
	port_init(); 
  6c:	2f d0       	rcall	.+94     	; 0xcc <port_init>
	
	//Init the use of a Servo
	servo_init(); 
  6e:	70 d0       	rcall	.+224    	; 0x150 <servo_init>
		//Toggle LED  
		port_led(true);
		
		//Move Servo from 0 to 180° in Steps of 5°
		uint8_t ang = 0; 
		for(ang = 0; ang <= 180; ang = ang+2) {
  70:	d0 e0       	ldi	r29, 0x00	; 0
	/* MAIN WHILE LOOP                                                      */
	/************************************************************************/
    while(1)
    {
		//Toggle LED  
		port_led(true);
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	32 d0       	rcall	.+100    	; 0xdc <port_led>
		
		//Move Servo from 0 to 180° in Steps of 5°
		uint8_t ang = 0; 
		for(ang = 0; ang <= 180; ang = ang+2) {
  78:	cd 2f       	mov	r28, r29
		servo_set(ang); 
  7a:	6c 2f       	mov	r22, r28
  7c:	70 e0       	ldi	r23, 0x00	; 0
  7e:	80 e0       	ldi	r24, 0x00	; 0
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	10 d1       	rcall	.+544    	; 0x2a4 <__floatunsisf>
  84:	31 d0       	rcall	.+98     	; 0xe8 <servo_set>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	83 ed       	ldi	r24, 0xD3	; 211
  88:	90 e3       	ldi	r25, 0x30	; 48
  8a:	01 97       	sbiw	r24, 0x01	; 1
  8c:	f1 f7       	brne	.-4      	; 0x8a <main+0x1e>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <main+0x24>
  90:	00 00       	nop
		//Toggle LED  
		port_led(true);
		
		//Move Servo from 0 to 180° in Steps of 5°
		uint8_t ang = 0; 
		for(ang = 0; ang <= 180; ang = ang+2) {
  92:	ce 5f       	subi	r28, 0xFE	; 254
  94:	c6 3b       	cpi	r28, 0xB6	; 182
  96:	89 f7       	brne	.-30     	; 0x7a <main+0xe>
		servo_set(ang); 
		_delay_ms(50); 
		}		

		//Toggle LED 
		port_led(false);
  98:	80 e0       	ldi	r24, 0x00	; 0
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	1f d0       	rcall	.+62     	; 0xdc <port_led>
  9e:	8f e3       	ldi	r24, 0x3F	; 63
  a0:	9d e0       	ldi	r25, 0x0D	; 13
  a2:	a3 e0       	ldi	r26, 0x03	; 3
  a4:	81 50       	subi	r24, 0x01	; 1
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	a0 40       	sbci	r26, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x38>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x42>
  ae:	00 00       	nop
		_delay_ms(1000); 
		servo_set(0); 
  b0:	60 e0       	ldi	r22, 0x00	; 0
  b2:	70 e0       	ldi	r23, 0x00	; 0
  b4:	cb 01       	movw	r24, r22
  b6:	18 d0       	rcall	.+48     	; 0xe8 <servo_set>
  b8:	8f e3       	ldi	r24, 0x3F	; 63
  ba:	9d e0       	ldi	r25, 0x0D	; 13
  bc:	a3 e0       	ldi	r26, 0x03	; 3
  be:	81 50       	subi	r24, 0x01	; 1
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	a0 40       	sbci	r26, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x52>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x5c>
  c8:	00 00       	nop
  ca:	d3 cf       	rjmp	.-90     	; 0x72 <main+0x6>

000000cc <port_init>:
 *
 */
void port_init(void) {
	
	//Set data direction (Output/Input) 
	DDRB = 0xff;	//All ports are outputs
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xff;    //All ports are outputs
  d0:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xff;    //All ports are outputs 
  d2:	8a b9       	out	0x0a, r24	; 10
	
	//Set all Ports to logic zero (<=> OFF) 
	PORTB = 0x00; 
  d4:	15 b8       	out	0x05, r1	; 5
	PORTC = 0x00; 
  d6:	18 b8       	out	0x08, r1	; 8
	PORTD = 0x00; 
  d8:	1b b8       	out	0x0b, r1	; 11
	
	
} 
  da:	08 95       	ret

000000dc <port_led>:
 * Control the LED connected to PORT PB0
 *
 * @param state, true, iff the LED must be turned on, false else  
 */
void port_led(bool state) {
	if(state) {
  dc:	88 23       	and	r24, r24
  de:	11 f0       	breq	.+4      	; 0xe4 <port_led+0x8>
		PORTB |= (1<<PB0); 
  e0:	28 9a       	sbi	0x05, 0	; 5
  e2:	08 95       	ret
	} else {
		PORTB &= ~(1<<PB0); 
  e4:	28 98       	cbi	0x05, 0	; 5
  e6:	08 95       	ret

000000e8 <servo_set>:
/**
 * Set the Servo to a given angle
 * 
 * @param deg: angele in degrees the servo should move to 
 */
void servo_set(float deg) {
  e8:	8f 92       	push	r8
  ea:	9f 92       	push	r9
  ec:	af 92       	push	r10
  ee:	bf 92       	push	r11
  f0:	cf 92       	push	r12
  f2:	df 92       	push	r13
  f4:	ef 92       	push	r14
  f6:	ff 92       	push	r15
  f8:	6b 01       	movw	r12, r22
  fa:	7c 01       	movw	r14, r24
	OCR1A = ICR1 - ((maxPWM-minPWM)/180.0f*deg + minPWM); 
  fc:	60 91 86 00 	lds	r22, 0x0086
 100:	70 91 87 00 	lds	r23, 0x0087
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	cd d0       	rcall	.+410    	; 0x2a4 <__floatunsisf>
 10a:	4b 01       	movw	r8, r22
 10c:	5c 01       	movw	r10, r24
 10e:	c7 01       	movw	r24, r14
 110:	b6 01       	movw	r22, r12
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	40 e2       	ldi	r20, 0x20	; 32
 118:	51 e4       	ldi	r21, 0x41	; 65
 11a:	52 d1       	rcall	.+676    	; 0x3c0 <__mulsf3>
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	30 e8       	ldi	r19, 0x80	; 128
 120:	49 e0       	ldi	r20, 0x09	; 9
 122:	54 e4       	ldi	r21, 0x44	; 68
 124:	2f d0       	rcall	.+94     	; 0x184 <__addsf3>
 126:	9b 01       	movw	r18, r22
 128:	ac 01       	movw	r20, r24
 12a:	c5 01       	movw	r24, r10
 12c:	b4 01       	movw	r22, r8
 12e:	29 d0       	rcall	.+82     	; 0x182 <__subsf3>
 130:	8d d0       	rcall	.+282    	; 0x24c <__fixunssfsi>
 132:	dc 01       	movw	r26, r24
 134:	cb 01       	movw	r24, r22
 136:	90 93 89 00 	sts	0x0089, r25
 13a:	80 93 88 00 	sts	0x0088, r24
 13e:	ff 90       	pop	r15
 140:	ef 90       	pop	r14
 142:	df 90       	pop	r13
 144:	cf 90       	pop	r12
 146:	bf 90       	pop	r11
 148:	af 90       	pop	r10
 14a:	9f 90       	pop	r9
 14c:	8f 90       	pop	r8
 14e:	08 95       	ret

00000150 <servo_init>:
 */
void servo_init(void) {
	
	
	
	DDRD |= 0xFF;		//Set DDRD as output 
 150:	8a b1       	in	r24, 0x0a	; 10
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	8a b9       	out	0x0a, r24	; 10
	TCCR1A |= (1<<WGM11) | (1<<COM1A1);		
 156:	e0 e8       	ldi	r30, 0x80	; 128
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	82 68       	ori	r24, 0x82	; 130
 15e:	80 83       	st	Z, r24
	TCCR1B |= 1<<WGM13 | 1<<WGM12 | 1<<CS10;
 160:	e1 e8       	ldi	r30, 0x81	; 129
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	89 61       	ori	r24, 0x19	; 25
 168:	80 83       	st	Z, r24
	
	//Set maximum Timer-Count 
	// ICR1 = F_CPU/(Servo acceptable Value in Hz); 
	ICR1 = 15999; 
 16a:	8f e7       	ldi	r24, 0x7F	; 127
 16c:	9e e3       	ldi	r25, 0x3E	; 62
 16e:	90 93 87 00 	sts	0x0087, r25
 172:	80 93 86 00 	sts	0x0086, r24

	//Init the Servo and make sure it starts in 90° Position. 
	servo_set(90); 
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	84 eb       	ldi	r24, 0xB4	; 180
 17c:	92 e4       	ldi	r25, 0x42	; 66
 17e:	b4 df       	rcall	.-152    	; 0xe8 <servo_set>
	
}
 180:	08 95       	ret

00000182 <__subsf3>:
 182:	50 58       	subi	r21, 0x80	; 128

00000184 <__addsf3>:
 184:	bb 27       	eor	r27, r27
 186:	aa 27       	eor	r26, r26
 188:	0e d0       	rcall	.+28     	; 0x1a6 <__addsf3x>
 18a:	e0 c0       	rjmp	.+448    	; 0x34c <__fp_round>
 18c:	d1 d0       	rcall	.+418    	; 0x330 <__fp_pscA>
 18e:	30 f0       	brcs	.+12     	; 0x19c <__addsf3+0x18>
 190:	d6 d0       	rcall	.+428    	; 0x33e <__fp_pscB>
 192:	20 f0       	brcs	.+8      	; 0x19c <__addsf3+0x18>
 194:	31 f4       	brne	.+12     	; 0x1a2 <__addsf3+0x1e>
 196:	9f 3f       	cpi	r25, 0xFF	; 255
 198:	11 f4       	brne	.+4      	; 0x19e <__addsf3+0x1a>
 19a:	1e f4       	brtc	.+6      	; 0x1a2 <__addsf3+0x1e>
 19c:	c6 c0       	rjmp	.+396    	; 0x32a <__fp_nan>
 19e:	0e f4       	brtc	.+2      	; 0x1a2 <__addsf3+0x1e>
 1a0:	e0 95       	com	r30
 1a2:	e7 fb       	bst	r30, 7
 1a4:	bc c0       	rjmp	.+376    	; 0x31e <__fp_inf>

000001a6 <__addsf3x>:
 1a6:	e9 2f       	mov	r30, r25
 1a8:	e2 d0       	rcall	.+452    	; 0x36e <__fp_split3>
 1aa:	80 f3       	brcs	.-32     	; 0x18c <__addsf3+0x8>
 1ac:	ba 17       	cp	r27, r26
 1ae:	62 07       	cpc	r22, r18
 1b0:	73 07       	cpc	r23, r19
 1b2:	84 07       	cpc	r24, r20
 1b4:	95 07       	cpc	r25, r21
 1b6:	18 f0       	brcs	.+6      	; 0x1be <__addsf3x+0x18>
 1b8:	71 f4       	brne	.+28     	; 0x1d6 <__addsf3x+0x30>
 1ba:	9e f5       	brtc	.+102    	; 0x222 <__addsf3x+0x7c>
 1bc:	fa c0       	rjmp	.+500    	; 0x3b2 <__fp_zero>
 1be:	0e f4       	brtc	.+2      	; 0x1c2 <__addsf3x+0x1c>
 1c0:	e0 95       	com	r30
 1c2:	0b 2e       	mov	r0, r27
 1c4:	ba 2f       	mov	r27, r26
 1c6:	a0 2d       	mov	r26, r0
 1c8:	0b 01       	movw	r0, r22
 1ca:	b9 01       	movw	r22, r18
 1cc:	90 01       	movw	r18, r0
 1ce:	0c 01       	movw	r0, r24
 1d0:	ca 01       	movw	r24, r20
 1d2:	a0 01       	movw	r20, r0
 1d4:	11 24       	eor	r1, r1
 1d6:	ff 27       	eor	r31, r31
 1d8:	59 1b       	sub	r21, r25
 1da:	99 f0       	breq	.+38     	; 0x202 <__addsf3x+0x5c>
 1dc:	59 3f       	cpi	r21, 0xF9	; 249
 1de:	50 f4       	brcc	.+20     	; 0x1f4 <__addsf3x+0x4e>
 1e0:	50 3e       	cpi	r21, 0xE0	; 224
 1e2:	68 f1       	brcs	.+90     	; 0x23e <__addsf3x+0x98>
 1e4:	1a 16       	cp	r1, r26
 1e6:	f0 40       	sbci	r31, 0x00	; 0
 1e8:	a2 2f       	mov	r26, r18
 1ea:	23 2f       	mov	r18, r19
 1ec:	34 2f       	mov	r19, r20
 1ee:	44 27       	eor	r20, r20
 1f0:	58 5f       	subi	r21, 0xF8	; 248
 1f2:	f3 cf       	rjmp	.-26     	; 0x1da <__addsf3x+0x34>
 1f4:	46 95       	lsr	r20
 1f6:	37 95       	ror	r19
 1f8:	27 95       	ror	r18
 1fa:	a7 95       	ror	r26
 1fc:	f0 40       	sbci	r31, 0x00	; 0
 1fe:	53 95       	inc	r21
 200:	c9 f7       	brne	.-14     	; 0x1f4 <__addsf3x+0x4e>
 202:	7e f4       	brtc	.+30     	; 0x222 <__addsf3x+0x7c>
 204:	1f 16       	cp	r1, r31
 206:	ba 0b       	sbc	r27, r26
 208:	62 0b       	sbc	r22, r18
 20a:	73 0b       	sbc	r23, r19
 20c:	84 0b       	sbc	r24, r20
 20e:	ba f0       	brmi	.+46     	; 0x23e <__addsf3x+0x98>
 210:	91 50       	subi	r25, 0x01	; 1
 212:	a1 f0       	breq	.+40     	; 0x23c <__addsf3x+0x96>
 214:	ff 0f       	add	r31, r31
 216:	bb 1f       	adc	r27, r27
 218:	66 1f       	adc	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	c2 f7       	brpl	.-16     	; 0x210 <__addsf3x+0x6a>
 220:	0e c0       	rjmp	.+28     	; 0x23e <__addsf3x+0x98>
 222:	ba 0f       	add	r27, r26
 224:	62 1f       	adc	r22, r18
 226:	73 1f       	adc	r23, r19
 228:	84 1f       	adc	r24, r20
 22a:	48 f4       	brcc	.+18     	; 0x23e <__addsf3x+0x98>
 22c:	87 95       	ror	r24
 22e:	77 95       	ror	r23
 230:	67 95       	ror	r22
 232:	b7 95       	ror	r27
 234:	f7 95       	ror	r31
 236:	9e 3f       	cpi	r25, 0xFE	; 254
 238:	08 f0       	brcs	.+2      	; 0x23c <__addsf3x+0x96>
 23a:	b3 cf       	rjmp	.-154    	; 0x1a2 <__addsf3+0x1e>
 23c:	93 95       	inc	r25
 23e:	88 0f       	add	r24, r24
 240:	08 f0       	brcs	.+2      	; 0x244 <__addsf3x+0x9e>
 242:	99 27       	eor	r25, r25
 244:	ee 0f       	add	r30, r30
 246:	97 95       	ror	r25
 248:	87 95       	ror	r24
 24a:	08 95       	ret

0000024c <__fixunssfsi>:
 24c:	98 d0       	rcall	.+304    	; 0x37e <__fp_splitA>
 24e:	88 f0       	brcs	.+34     	; 0x272 <__fixunssfsi+0x26>
 250:	9f 57       	subi	r25, 0x7F	; 127
 252:	90 f0       	brcs	.+36     	; 0x278 <__fixunssfsi+0x2c>
 254:	b9 2f       	mov	r27, r25
 256:	99 27       	eor	r25, r25
 258:	b7 51       	subi	r27, 0x17	; 23
 25a:	a0 f0       	brcs	.+40     	; 0x284 <__fixunssfsi+0x38>
 25c:	d1 f0       	breq	.+52     	; 0x292 <__fixunssfsi+0x46>
 25e:	66 0f       	add	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	88 1f       	adc	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	1a f0       	brmi	.+6      	; 0x26e <__fixunssfsi+0x22>
 268:	ba 95       	dec	r27
 26a:	c9 f7       	brne	.-14     	; 0x25e <__fixunssfsi+0x12>
 26c:	12 c0       	rjmp	.+36     	; 0x292 <__fixunssfsi+0x46>
 26e:	b1 30       	cpi	r27, 0x01	; 1
 270:	81 f0       	breq	.+32     	; 0x292 <__fixunssfsi+0x46>
 272:	9f d0       	rcall	.+318    	; 0x3b2 <__fp_zero>
 274:	b1 e0       	ldi	r27, 0x01	; 1
 276:	08 95       	ret
 278:	9c c0       	rjmp	.+312    	; 0x3b2 <__fp_zero>
 27a:	67 2f       	mov	r22, r23
 27c:	78 2f       	mov	r23, r24
 27e:	88 27       	eor	r24, r24
 280:	b8 5f       	subi	r27, 0xF8	; 248
 282:	39 f0       	breq	.+14     	; 0x292 <__fixunssfsi+0x46>
 284:	b9 3f       	cpi	r27, 0xF9	; 249
 286:	cc f3       	brlt	.-14     	; 0x27a <__fixunssfsi+0x2e>
 288:	86 95       	lsr	r24
 28a:	77 95       	ror	r23
 28c:	67 95       	ror	r22
 28e:	b3 95       	inc	r27
 290:	d9 f7       	brne	.-10     	; 0x288 <__fixunssfsi+0x3c>
 292:	3e f4       	brtc	.+14     	; 0x2a2 <__fixunssfsi+0x56>
 294:	90 95       	com	r25
 296:	80 95       	com	r24
 298:	70 95       	com	r23
 29a:	61 95       	neg	r22
 29c:	7f 4f       	sbci	r23, 0xFF	; 255
 29e:	8f 4f       	sbci	r24, 0xFF	; 255
 2a0:	9f 4f       	sbci	r25, 0xFF	; 255
 2a2:	08 95       	ret

000002a4 <__floatunsisf>:
 2a4:	e8 94       	clt
 2a6:	09 c0       	rjmp	.+18     	; 0x2ba <__floatsisf+0x12>

000002a8 <__floatsisf>:
 2a8:	97 fb       	bst	r25, 7
 2aa:	3e f4       	brtc	.+14     	; 0x2ba <__floatsisf+0x12>
 2ac:	90 95       	com	r25
 2ae:	80 95       	com	r24
 2b0:	70 95       	com	r23
 2b2:	61 95       	neg	r22
 2b4:	7f 4f       	sbci	r23, 0xFF	; 255
 2b6:	8f 4f       	sbci	r24, 0xFF	; 255
 2b8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ba:	99 23       	and	r25, r25
 2bc:	a9 f0       	breq	.+42     	; 0x2e8 <__floatsisf+0x40>
 2be:	f9 2f       	mov	r31, r25
 2c0:	96 e9       	ldi	r25, 0x96	; 150
 2c2:	bb 27       	eor	r27, r27
 2c4:	93 95       	inc	r25
 2c6:	f6 95       	lsr	r31
 2c8:	87 95       	ror	r24
 2ca:	77 95       	ror	r23
 2cc:	67 95       	ror	r22
 2ce:	b7 95       	ror	r27
 2d0:	f1 11       	cpse	r31, r1
 2d2:	f8 cf       	rjmp	.-16     	; 0x2c4 <__floatsisf+0x1c>
 2d4:	fa f4       	brpl	.+62     	; 0x314 <__stack+0x15>
 2d6:	bb 0f       	add	r27, r27
 2d8:	11 f4       	brne	.+4      	; 0x2de <__floatsisf+0x36>
 2da:	60 ff       	sbrs	r22, 0
 2dc:	1b c0       	rjmp	.+54     	; 0x314 <__stack+0x15>
 2de:	6f 5f       	subi	r22, 0xFF	; 255
 2e0:	7f 4f       	sbci	r23, 0xFF	; 255
 2e2:	8f 4f       	sbci	r24, 0xFF	; 255
 2e4:	9f 4f       	sbci	r25, 0xFF	; 255
 2e6:	16 c0       	rjmp	.+44     	; 0x314 <__stack+0x15>
 2e8:	88 23       	and	r24, r24
 2ea:	11 f0       	breq	.+4      	; 0x2f0 <__floatsisf+0x48>
 2ec:	96 e9       	ldi	r25, 0x96	; 150
 2ee:	11 c0       	rjmp	.+34     	; 0x312 <__stack+0x13>
 2f0:	77 23       	and	r23, r23
 2f2:	21 f0       	breq	.+8      	; 0x2fc <__floatsisf+0x54>
 2f4:	9e e8       	ldi	r25, 0x8E	; 142
 2f6:	87 2f       	mov	r24, r23
 2f8:	76 2f       	mov	r23, r22
 2fa:	05 c0       	rjmp	.+10     	; 0x306 <__stack+0x7>
 2fc:	66 23       	and	r22, r22
 2fe:	71 f0       	breq	.+28     	; 0x31c <__stack+0x1d>
 300:	96 e8       	ldi	r25, 0x86	; 134
 302:	86 2f       	mov	r24, r22
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	2a f0       	brmi	.+10     	; 0x314 <__stack+0x15>
 30a:	9a 95       	dec	r25
 30c:	66 0f       	add	r22, r22
 30e:	77 1f       	adc	r23, r23
 310:	88 1f       	adc	r24, r24
 312:	da f7       	brpl	.-10     	; 0x30a <__stack+0xb>
 314:	88 0f       	add	r24, r24
 316:	96 95       	lsr	r25
 318:	87 95       	ror	r24
 31a:	97 f9       	bld	r25, 7
 31c:	08 95       	ret

0000031e <__fp_inf>:
 31e:	97 f9       	bld	r25, 7
 320:	9f 67       	ori	r25, 0x7F	; 127
 322:	80 e8       	ldi	r24, 0x80	; 128
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	60 e0       	ldi	r22, 0x00	; 0
 328:	08 95       	ret

0000032a <__fp_nan>:
 32a:	9f ef       	ldi	r25, 0xFF	; 255
 32c:	80 ec       	ldi	r24, 0xC0	; 192
 32e:	08 95       	ret

00000330 <__fp_pscA>:
 330:	00 24       	eor	r0, r0
 332:	0a 94       	dec	r0
 334:	16 16       	cp	r1, r22
 336:	17 06       	cpc	r1, r23
 338:	18 06       	cpc	r1, r24
 33a:	09 06       	cpc	r0, r25
 33c:	08 95       	ret

0000033e <__fp_pscB>:
 33e:	00 24       	eor	r0, r0
 340:	0a 94       	dec	r0
 342:	12 16       	cp	r1, r18
 344:	13 06       	cpc	r1, r19
 346:	14 06       	cpc	r1, r20
 348:	05 06       	cpc	r0, r21
 34a:	08 95       	ret

0000034c <__fp_round>:
 34c:	09 2e       	mov	r0, r25
 34e:	03 94       	inc	r0
 350:	00 0c       	add	r0, r0
 352:	11 f4       	brne	.+4      	; 0x358 <__fp_round+0xc>
 354:	88 23       	and	r24, r24
 356:	52 f0       	brmi	.+20     	; 0x36c <__fp_round+0x20>
 358:	bb 0f       	add	r27, r27
 35a:	40 f4       	brcc	.+16     	; 0x36c <__fp_round+0x20>
 35c:	bf 2b       	or	r27, r31
 35e:	11 f4       	brne	.+4      	; 0x364 <__fp_round+0x18>
 360:	60 ff       	sbrs	r22, 0
 362:	04 c0       	rjmp	.+8      	; 0x36c <__fp_round+0x20>
 364:	6f 5f       	subi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	8f 4f       	sbci	r24, 0xFF	; 255
 36a:	9f 4f       	sbci	r25, 0xFF	; 255
 36c:	08 95       	ret

0000036e <__fp_split3>:
 36e:	57 fd       	sbrc	r21, 7
 370:	90 58       	subi	r25, 0x80	; 128
 372:	44 0f       	add	r20, r20
 374:	55 1f       	adc	r21, r21
 376:	59 f0       	breq	.+22     	; 0x38e <__fp_splitA+0x10>
 378:	5f 3f       	cpi	r21, 0xFF	; 255
 37a:	71 f0       	breq	.+28     	; 0x398 <__fp_splitA+0x1a>
 37c:	47 95       	ror	r20

0000037e <__fp_splitA>:
 37e:	88 0f       	add	r24, r24
 380:	97 fb       	bst	r25, 7
 382:	99 1f       	adc	r25, r25
 384:	61 f0       	breq	.+24     	; 0x39e <__fp_splitA+0x20>
 386:	9f 3f       	cpi	r25, 0xFF	; 255
 388:	79 f0       	breq	.+30     	; 0x3a8 <__fp_splitA+0x2a>
 38a:	87 95       	ror	r24
 38c:	08 95       	ret
 38e:	12 16       	cp	r1, r18
 390:	13 06       	cpc	r1, r19
 392:	14 06       	cpc	r1, r20
 394:	55 1f       	adc	r21, r21
 396:	f2 cf       	rjmp	.-28     	; 0x37c <__fp_split3+0xe>
 398:	46 95       	lsr	r20
 39a:	f1 df       	rcall	.-30     	; 0x37e <__fp_splitA>
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <__fp_splitA+0x30>
 39e:	16 16       	cp	r1, r22
 3a0:	17 06       	cpc	r1, r23
 3a2:	18 06       	cpc	r1, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	f1 cf       	rjmp	.-30     	; 0x38a <__fp_splitA+0xc>
 3a8:	86 95       	lsr	r24
 3aa:	71 05       	cpc	r23, r1
 3ac:	61 05       	cpc	r22, r1
 3ae:	08 94       	sec
 3b0:	08 95       	ret

000003b2 <__fp_zero>:
 3b2:	e8 94       	clt

000003b4 <__fp_szero>:
 3b4:	bb 27       	eor	r27, r27
 3b6:	66 27       	eor	r22, r22
 3b8:	77 27       	eor	r23, r23
 3ba:	cb 01       	movw	r24, r22
 3bc:	97 f9       	bld	r25, 7
 3be:	08 95       	ret

000003c0 <__mulsf3>:
 3c0:	0b d0       	rcall	.+22     	; 0x3d8 <__mulsf3x>
 3c2:	c4 cf       	rjmp	.-120    	; 0x34c <__fp_round>
 3c4:	b5 df       	rcall	.-150    	; 0x330 <__fp_pscA>
 3c6:	28 f0       	brcs	.+10     	; 0x3d2 <__mulsf3+0x12>
 3c8:	ba df       	rcall	.-140    	; 0x33e <__fp_pscB>
 3ca:	18 f0       	brcs	.+6      	; 0x3d2 <__mulsf3+0x12>
 3cc:	95 23       	and	r25, r21
 3ce:	09 f0       	breq	.+2      	; 0x3d2 <__mulsf3+0x12>
 3d0:	a6 cf       	rjmp	.-180    	; 0x31e <__fp_inf>
 3d2:	ab cf       	rjmp	.-170    	; 0x32a <__fp_nan>
 3d4:	11 24       	eor	r1, r1
 3d6:	ee cf       	rjmp	.-36     	; 0x3b4 <__fp_szero>

000003d8 <__mulsf3x>:
 3d8:	ca df       	rcall	.-108    	; 0x36e <__fp_split3>
 3da:	a0 f3       	brcs	.-24     	; 0x3c4 <__mulsf3+0x4>

000003dc <__mulsf3_pse>:
 3dc:	95 9f       	mul	r25, r21
 3de:	d1 f3       	breq	.-12     	; 0x3d4 <__mulsf3+0x14>
 3e0:	95 0f       	add	r25, r21
 3e2:	50 e0       	ldi	r21, 0x00	; 0
 3e4:	55 1f       	adc	r21, r21
 3e6:	62 9f       	mul	r22, r18
 3e8:	f0 01       	movw	r30, r0
 3ea:	72 9f       	mul	r23, r18
 3ec:	bb 27       	eor	r27, r27
 3ee:	f0 0d       	add	r31, r0
 3f0:	b1 1d       	adc	r27, r1
 3f2:	63 9f       	mul	r22, r19
 3f4:	aa 27       	eor	r26, r26
 3f6:	f0 0d       	add	r31, r0
 3f8:	b1 1d       	adc	r27, r1
 3fa:	aa 1f       	adc	r26, r26
 3fc:	64 9f       	mul	r22, r20
 3fe:	66 27       	eor	r22, r22
 400:	b0 0d       	add	r27, r0
 402:	a1 1d       	adc	r26, r1
 404:	66 1f       	adc	r22, r22
 406:	82 9f       	mul	r24, r18
 408:	22 27       	eor	r18, r18
 40a:	b0 0d       	add	r27, r0
 40c:	a1 1d       	adc	r26, r1
 40e:	62 1f       	adc	r22, r18
 410:	73 9f       	mul	r23, r19
 412:	b0 0d       	add	r27, r0
 414:	a1 1d       	adc	r26, r1
 416:	62 1f       	adc	r22, r18
 418:	83 9f       	mul	r24, r19
 41a:	a0 0d       	add	r26, r0
 41c:	61 1d       	adc	r22, r1
 41e:	22 1f       	adc	r18, r18
 420:	74 9f       	mul	r23, r20
 422:	33 27       	eor	r19, r19
 424:	a0 0d       	add	r26, r0
 426:	61 1d       	adc	r22, r1
 428:	23 1f       	adc	r18, r19
 42a:	84 9f       	mul	r24, r20
 42c:	60 0d       	add	r22, r0
 42e:	21 1d       	adc	r18, r1
 430:	82 2f       	mov	r24, r18
 432:	76 2f       	mov	r23, r22
 434:	6a 2f       	mov	r22, r26
 436:	11 24       	eor	r1, r1
 438:	9f 57       	subi	r25, 0x7F	; 127
 43a:	50 40       	sbci	r21, 0x00	; 0
 43c:	8a f0       	brmi	.+34     	; 0x460 <__mulsf3_pse+0x84>
 43e:	e1 f0       	breq	.+56     	; 0x478 <__mulsf3_pse+0x9c>
 440:	88 23       	and	r24, r24
 442:	4a f0       	brmi	.+18     	; 0x456 <__mulsf3_pse+0x7a>
 444:	ee 0f       	add	r30, r30
 446:	ff 1f       	adc	r31, r31
 448:	bb 1f       	adc	r27, r27
 44a:	66 1f       	adc	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	88 1f       	adc	r24, r24
 450:	91 50       	subi	r25, 0x01	; 1
 452:	50 40       	sbci	r21, 0x00	; 0
 454:	a9 f7       	brne	.-22     	; 0x440 <__mulsf3_pse+0x64>
 456:	9e 3f       	cpi	r25, 0xFE	; 254
 458:	51 05       	cpc	r21, r1
 45a:	70 f0       	brcs	.+28     	; 0x478 <__mulsf3_pse+0x9c>
 45c:	60 cf       	rjmp	.-320    	; 0x31e <__fp_inf>
 45e:	aa cf       	rjmp	.-172    	; 0x3b4 <__fp_szero>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	ec f3       	brlt	.-6      	; 0x45e <__mulsf3_pse+0x82>
 464:	98 3e       	cpi	r25, 0xE8	; 232
 466:	dc f3       	brlt	.-10     	; 0x45e <__mulsf3_pse+0x82>
 468:	86 95       	lsr	r24
 46a:	77 95       	ror	r23
 46c:	67 95       	ror	r22
 46e:	b7 95       	ror	r27
 470:	f7 95       	ror	r31
 472:	e7 95       	ror	r30
 474:	9f 5f       	subi	r25, 0xFF	; 255
 476:	c1 f7       	brne	.-16     	; 0x468 <__mulsf3_pse+0x8c>
 478:	fe 2b       	or	r31, r30
 47a:	88 0f       	add	r24, r24
 47c:	91 1d       	adc	r25, r1
 47e:	96 95       	lsr	r25
 480:	87 95       	ror	r24
 482:	97 f9       	bld	r25, 7
 484:	08 95       	ret

00000486 <_exit>:
 486:	f8 94       	cli

00000488 <__stop_program>:
 488:	ff cf       	rjmp	.-2      	; 0x488 <__stop_program>
